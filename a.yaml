static_resources:
  # secrets:
    # - name: front_tls_cert
    #   tls_certificate:
    #     certificate_chain:
    #       filename: /etc/certs/front.pem
    #     private_key:
    #       filename: /etc/certs/front-key.pem
    # - name: serviceA_tls_cert
    #   tls_certificate:
    #     certificate_chain:
    #       filename: /etc/certs/service.pem
    #     private_key:
    #       filename: /etc/certs/service-key.pem
    # - name: serviceB_tls_cert
    #   tls_certificate:
    #     certificate_chain:
    #       filename: /etc/certs/service.pem
    #     private_key:
    #       filename: /etc/certs/service-key.pem
    # - name: validation_context
    #   validation_context:
    #     trusted_ca:
    #       filename: /etc/certs/ca.pem
  listeners:
  # - address:
  #     socket_address:
  #       address: 0.0.0.0
  #       port_value: 80
  #   filter_chains:
  #   - filters:
  #     - name: envoy.http_connection_manager
  #       config:
  #         codec_type: auto
  #         stat_prefix: ingress_http
  #         route_config:
  #           virtual_hosts:
  #           - name: backend
  #             domains:
  #             - "*"
  #             routes:
  #             - match:
  #                 prefix: "/"
  #               redirect:
  #                 path_redirect: "/"
  #                 https_redirect: true
  #         http_filters:
  #         - name: envoy.router
  #           config: {}
  # - address:
  #     socket_address:
  #       address: 0.0.0.0
  #       port_value: 443
  #   filter_chains:
  #   - transport_socket:
  #       name: envoy.transport_sockets.tls
  #       config:
  #         common_tls_context:
  #           tls_certificate_sds_secret_configs:
  #           - name: front_tls_cert
  #             sds_config:
  #               ads: {}
  #           validation_context_sds_secret_config:
  #             name: validation_context
  #             sds_config:
  #               ads: {}
  #     filters:
  #     - name: envoy.http_connection_manager
  #       config:
  #         codec_type: auto
  #         stat_prefix: ingress_http
  #         route_config:
  #           name: local_route
  #           virtual_hosts:
  #           - name: backend
  #             domains:
  #             - "*"
  #             routes:
  #             - match:
  #                 prefix: "/service/1"
  #               route:
  #                 cluster: serviceA
  #             - match:
  #                 prefix: "/service/2"
  #               route:
  #                 cluster: serviceB
  #         http_filters:
  #         - name: envoy.router
  #           config: {}
      # tls_context:
      #   common_tls_context:
      #     tls_certificate_sds_secret_configs:
      #     - name: front_tls_cert
      #       sds_config:
      #         ads: {}
      #     validation_context_sds_secret_config:
      #       name: validation_context
      #       sds_config:
      #         ads: {}
  - address:
      socket_address: { address: 0.0.0.0, port_value: 1234 }
    listener_filters:
    - name: "envoy.listener.tls_inspector"
      typed_config: {}
    filter_chains:
    - filter_chain_match:
        server_names: ["www.service.com", "service.com"]
      filters:
      - name: envoy.tcp_proxy
        config:
          stat_prefix: ingress_http
          cluster: serviceC
  clusters:
  - name: serviceA
    connect_timeout: 0.25s
    type: strict_dns
    lb_policy: round_robin
    http2_protocol_options: {}
    transport_socket:
      name: envoy.transport_sockets.tls
      config:
        common_tls_context:
          tls_certificate_sds_secret_configs:
          - name: serviceA_tls_cert
            sds_config:
              ads: {}
    # tls_context:
    #   common_tls_context:
    #     tls_certificate_sds_secret_configs:
    #     - name: serviceA_tls_cert
    #       sds_config:
    #         ads: {}
    hosts:
    - socket_address:
        address: serviceA
        port_value: 443
  - name: serviceB
    connect_timeout: 0.25s
    type: strict_dns
    lb_policy: round_robin
    http2_protocol_options: {}
    transport_socket:
      name: envoy.transport_sockets.tls
      config:
        common_tls_context:
          tls_certificate_sds_secret_configs:
          - name: serviceB_tls_cert
            sds_config:
              ads: {}
    # tls_context:
    #   common_tls_context:
    #     tls_certificate_sds_secret_configs:
    #     - name: serviceB_tls_cert
    #       sds_config:
    #         ads: {}
    hosts:
    - socket_address:
        address: serviceB
        port_value: 443
  - name: serviceC
    connect_timeout: 0.25s
    type: strict_dns
    lb_policy: round_robin
    http2_protocol_options: {}
    hosts:
    - socket_address:
        address: serviceC
        port_value: 443
  - name: xds_cluster
    connect_timeout: 0.25s
    type: strict_dns
    lb_policy: ROUND_ROBIN
    dns_refresh_rate: 5s
    http2_protocol_options: {}
    upstream_connection_options:
      tcp_keepalive: {}
    load_assignment:
      cluster_name: xds_cluster
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: pilot
                port_value: 15010
dynamic_resources:
  # cds_config: {ads: {}}
  # lds_config: {ads: {}}
  ads_config:
    api_type: GRPC
    grpc_services:
      envoy_grpc:
        cluster_name: xds_cluster
admin:
  access_log_path: "/dev/null"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 9901
# layered_runtime:
#   layers:
#   - name: admin
#     admin_layer: {}
#   - name: nt_layer
#     rtds_layer:
#       name: front-cluster
#       rtds_config: {ads: {}}